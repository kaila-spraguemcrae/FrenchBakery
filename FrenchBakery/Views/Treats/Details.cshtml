@{
  Layout = "_Layout";
}

@model FrenchBakery.Models.Treat;

<br>
<div class="card custom-card">
  <div class="card-header">
    <h1>@Html.DisplayFor(model => model.Name)</h1>
    <p>Price: @Html.DisplayFor(model => model.Price)</p>
  </div>
  <div class="card-body">
    @if(@Model.Flavors.Count == 0)
    {
      <h3 class="card-title">Flavors:</h3>
      <p>There are no Treats associated with this flavor</p>
    }
    else
    {
      <h3 class="card-title"><strong>Flavor(s): </strong></h3>
      <ul class="list-group" align="center">
      @foreach(var join in Model.Flavors)
      {
        <li class="list-group-item list-group-item-action text-dark">@join.Flavor.Type
        @using (@Html.BeginForm("DeleteFlavor", "Treats"))
        {
          @Html.Hidden("joinId", @join.FlavorTreatId)
          <input type="submit" value="Delete" class="btn btn-outline-secondary"/>
        }
        </li>
      }
      </ul>
    }
  </div>
  <div class="card-footer">
    @Html.ActionLink("Add a Flavor", "AddFlavor", new { id = Model.TreatId }, new { @class="btn btn-outline-secondary" })
    @Html.ActionLink("Edit this Treat", "Edit", new { id = Model.TreatId }, new { @class="btn btn-outline-secondary" })
    @Html.ActionLink("Delete this Treat", "Delete", new { id = Model.TreatId }, new { @class="btn btn-outline-secondary" })
  </div>
</div>