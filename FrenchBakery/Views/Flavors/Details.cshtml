@{
  Layout = "_Layout";
}

@model FrenchBakery.Models.Flavor;

<br>
<div class="card custom-card">
  <div class="card-header">
    <h1>Flavor: @Html.DisplayFor(model => model.Type)</h1>
    <p>@Html.DisplayFor(model => model.Description)</p>
  </div>
  <div class="card-body">
    <h2 class="card-title">Treats with this Flavor:</h2>
    @if(@Model.Treats.Count == 0)
    {
      <p>There are no Treats associated with this flavor</p>
    }
    else
    {
      <ul class="list-group" align="center">
        @foreach(var join in Model.Treats)
        {
          <li class="list-group-item list-group-item-action text-dark">@join.Treat.Name
          @using (@Html.BeginForm("DeleteTreat", "Flavors"))
          {
            @Html.Hidden("joinId", @join.FlavorTreatId)
            <input type="submit" value="Delete" class="btn btn-outline-secondary" display= "inline-block"/>
          }
          </li>
        }
      </ul>
    }
  </div>
  <div class="card-footer">
    @Html.ActionLink("Add a Treat", "AddTreat", new { id = Model.FlavorId }, new { @class="btn btn-outline-secondary" })
    @Html.ActionLink("Edit this Flavor", "Edit", new { id = Model.FlavorId }, new { @class="btn btn-outline-secondary" })
    @Html.ActionLink("Delete this Flavor", "Delete", new { id = Model.FlavorId }, new { @class="btn btn-outline-secondary" })
  </div>
</div>